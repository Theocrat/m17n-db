<?xml version="1.0" encoding="utf-8"?>

<grammar 
	 datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
         xmlns:xi="http://www.w3.org/1999/XML/xinclude"
	 xmlns="http://relaxng.org/ns/structure/1.0"
	 ns="http://www.m17n.org/MIM">

<include href="expr.rng"/>
 
<start combine="choice">
  <element name="input-method">
    <ref name="im-declaration"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional><element name="title"><data type="string"/></element></optional>
    <optional><ref name="variable-list"/></optional>
    <optional><ref name="command-list"/></optional>
    <optional><ref name="module-list"/></optional>

    <optional><ref name="macro-list"/></optional>
    <optional><ref name="map-list"/></optional>
    <optional><ref name="state-list"/></optional>
  </element>
</start>

<!--   =====input method details====================================       -->

<define name="im-declaration">
  <element name="tags">
    <element name="language">
      <choice>
	<value>t</value>
	<data type="string"><param name="pattern">[a-z]{2,3}</param></data>
      </choice>
    </element>
  <choice>
    <group>
      <element name="name"><value>nil</value></element>
      <element name="extra-id"><data type="ID"/></element>
    </group>
    <group>
      <element name="name">
	<choice>
	  <data type="string"><param name="pattern">[^n][^i][^l]</param></data>
	  <data type="string"><param name="pattern">.{1,2}</param></data>
	  <data type="string"><param name="pattern">....+</param></data>
	</choice>
      </element>
      <optional><element name="extra-id"><data type="ID"/></element></optional>
    </group>
  </choice>
  </element>
  <optional>
    <element name="m17n-version">
      <data type="string"><param name="pattern">[0-9]+\.[0-9]+\.[0-9]+</param></data>
    </element>
  </optional>
</define>

<!-- setups -->

<define name="variable-list">
  <element name="variable-list">
    <oneOrMore>
      <ref name="defvar"/>
    </oneOrMore>
  </element>
</define>

<define name="command-list">
  <element name="command-list">
    <oneOrMore>
      <element name="defcmd">
	<attribute name="cname">
	  <data type="ID"><param name="pattern">command-.*</param></data></attribute>
	<optional>
	  <ref name="description"/>
	</optional>
	<zeroOrMore><ref name="keyseq"/></zeroOrMore>
      </element>
    </oneOrMore>
  </element>
</define>

<define name="module-list">
  <element name="module-list">
    <oneOrMore>
      <element name="module">
	<attribute name="id"><data type="string"/></attribute>
	<oneOrMore>
	  <element name="defun">
	    <attribute name="fname">
	      <data type="ID"><param name="pattern">.*-function-.*</param></data>
	    </attribute>
	    <empty/>
	  </element>
	</oneOrMore>
      </element>
    </oneOrMore>
  </element>
</define>

<define name="macro-list">
  <element name="macro-list">
    <oneOrMore>
      <ref name="defmacro"/>
    </oneOrMore>
  </element>
</define>

<!-- the real work -->

<define name="map-list">
  <element name="map-list">
  <oneOrMore>
    <element name="map">
      <attribute name="mname">
	<data type="ID"><param name="pattern">map-.*</param></data>
      </attribute>
      <zeroOrMore>
	<element name="rule">
	  <choice>
	    <ref name="keyseq"/>
	    <ref name="command-reference"/>
	  </choice>
	  <zeroOrMore><ref name="funcall"/></zeroOrMore>
	</element>
      </zeroOrMore>
    </element>
  </oneOrMore>
  </element>
</define>

<define name="command-reference">
  <element name="command">
      <attribute name="cname"><data type="IDREF"/></attribute>
  </element>
</define>

<define name="keyseq">
  <element name="keyseq">
    <oneOrMore>
      <choice>
	<ref name="listterm"/>
	<ref name="strterm"/>
      </choice>
      </oneOrMore>
  </element>
</define>

<define name="marker">
  <element name="marker"><data type="string"/></element>
</define>

<define name="selector">
  <element name="selector">
    <choice>
	<value>@first</value>
	<value>@current</value>
	<value>@last</value>
	<value>@previous</value>
	<value>@next</value>
	<value>@previous-group</value>
	<value>@next-group</value>
    </choice>
  </element>
</define>

<define name="state-list">
  <element name="state-list">
    <zeroOrMore>
      <element name="state">
	<attribute name="sname">
	  <data type="ID"><param name="pattern">state-.*</param></data>
	</attribute>
	<optional><element name="title"><data type="string"/></element></optional>
	<interleave>
	<optional>
	  <element name="state-hook">
	    <oneOrMore><ref name="funcall"/></oneOrMore>
	  </element>
	</optional>
	<optional>
	  <element name="catch-all-branch">
	    <zeroOrMore><ref name="funcall"/></zeroOrMore> 
	  </element>
	</optional>
	<zeroOrMore>
	  <element name="branch">
	    <attribute name="mname">
		<data type="IDREF"/>
	    </attribute>
	    <zeroOrMore><ref name="funcall"/></zeroOrMore>
	  </element>
	</zeroOrMore>
	</interleave>
      </element>
    </zeroOrMore>
  </element>
</define>

<!--   ===MIM original terms and functions ======================================       -->

<define name="keyseqterm">
  <choice>
    <ref name="keyseq"/>
    <ref name="funcall"/>
    <ref name="varref"/>
  </choice>
</define>

<define name="markerterm">
  <choice>
    <ref name="marker"/>
    <ref name="funcall"/>
    <ref name="varref"/>
  </choice>
</define>

<define name="selectorterm">
  <choice>
    <ref name="selector"/>
    <ref name="funcall"/>
    <ref name="varref"/>
  </choice>
</define>


<define name="term" combine="choice">
  <choice>
    <ref name="keyseq"/>
    <ref name="marker"/>
    <ref name="selector"/>
  </choice>
</define>

<define name="funcall" combine="choice">
  <choice>
    <element name="insert"><choice><ref name="intterm"/><ref name="strterm"/></choice></element>
    <element name="insert-candidates">
      <oneOrMore><choice><ref name="listterm"/><ref name="strterm"/></choice>
    </oneOrMore></element>
    <element name="delete"><choice><ref name="markerterm"/><ref name="intterm"/></choice></element>
    <element name="select"><choice><ref name="selectorterm"/><ref name="intterm"/></choice></element>

    <element name="show-candidates"><empty/></element>
    <element name="hide-candidates"><empty/></element>

    <element name="move"><choice><ref name="markerterm"/><ref name="intterm"/></choice></element>
    <element name="mark"><ref name="markerterm"/></element>
    <element name="pushback"><choice><ref name="keyseqterm"/><ref name="intterm"/></choice></element>

    <element name="pop"><empty/></element>
    <element name="undo"><optional><ref name="intterm"/></optional></element>
    <element name="commit"><empty/></element>
    <element name="unhandle"><empty/></element>

    <element name="shift"><ref name="symterm"/></element>
    <element name="shiftback"><empty/></element>

    <element name="char-at"><ref name="markerterm"/></element>
    <element name="key-count"><empty/></element>
    <element name="surrounding-text-flag"><empty/></element>

  </choice>
</define>

</grammar>

